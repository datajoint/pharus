# DJGUI_API_VERSION=$(cat dj_gui_api_server/version.py | tail -1 | awk -F\' '{print $2}') docker-compose -f LNX-docker-compose.yaml up --build --exit-code-from dj-gui-api-test
version: "2.4"
x-net: &net
  networks:
      - dj-gui-api-test
services:
  db:
    <<: *net
    image: datajoint/mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=simple
  dj-gui-api-test:
    <<: *net
    build:
      context: .
      args:
        - PY_VER
        - DISTRO
        - IMAGE
    image: datajoint/djgui-api:v${DJGUI_API_VERSION}
    environment:
      - PRIVATE_KEY
      - PUBLIC_KEY
      - FLASK_ENV=development # enables logging to console from Flask
      - TEST_DB_SERVER=db
      - TEST_DB_USER=root
      - TEST_DB_PASS=simple
      - AS_SCRIPT
    volumes:
      - .:/main
      - ./test_requirements.txt:/tmp/pip_requirements.txt
    user: ${HOST_UID}:anaconda
    working_dir: /main
    command:
      - sh
      - -c
      - |
        if [ ! -z "$${AS_SCRIPT}" ]; then
          set -e
          echo "------ SYNTAX TESTS ------"
          flake8 dj_gui_api_server --count --select=E9,F63,F7,F82 --show-source --statistics
          echo "------ UNIT TESTS ------"
          pytest -sv --cov-report term-missing --cov=dj_gui_api_server /main/tests
          echo "------ STYLE TESTS ------"
          flake8 dj_gui_api_server --count --max-complexity=15 --max-line-length=95 \
            --statistics
        else
          echo "=== Running ==="
          echo "Please see 'LNX-docker-compose.yaml' for detail on running tests."
          tail -f /dev/null
        fi
    depends_on:
      db:
        condition: service_healthy
networks:
  dj-gui-api-test:
    name: dj-gui-api-test